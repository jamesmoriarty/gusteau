#!/usr/bin/env ruby

require 'rubygems'
require 'gli'

$LOAD_PATH << File.expand_path("../..", __FILE__)
require 'lib/gusteau'

include GLI::App

program_desc Gusteau::DESCRIPTION
version      Gusteau::VERSION
sort_help    :manually

default_node = ENV['GUSTEAU_NODE'] || 'vagrant'

desc 'Node to use'
flag [:n, :node], :arg_name => 'node', :default_value => default_node

desc 'Install chef-solo'
switch [:b, :bootstrap], :negatable => false

desc 'Output format to use'
flag ['F', 'format'], :arg_name => 'format'

desc 'Set the log level'
flag ['l', 'log_level'], :arg_name => 'log_level'

desc 'Enable whyrun node'
switch ['W', 'why-run'], :negatable => false

on_error {}

desc 'Fully provision a node'
command 'provision' do |c|
  c.action do |global, options, args|
    node(global[:node]).provision(options.merge global)
  end
end

desc 'Run recipe(s)'
command 'run' do |c|
  c.arg_name 'recipe', :multiple

  c.action do |global, options, args|
    node(global[:node]).run(options.merge global, args)
  end
end

desc 'Generate an example project (a bureau)'
command 'generate' do |c|
  c.action do |global, options, args|
    Gusteau::Bureau.new(args[0])
  end
end

desc 'Generate an ssh config'
command 'ssh-config' do |c|
  c.action do
   puts Gusteau::SSHConfig.new
  end
end

def node(node_name)
  unless node_path = Dir.glob("./nodes/**/#{node_name}.yml")[0]
    abort "Node '#{node_name}' is unknown. Known nodes are #{nodes_list.join(', ')}."
  end
  Gusteau::Node.new(node_path)
end

def nodes_list
  Dir.glob("./nodes/**/*.yml").map { |f| File.basename(f, '.*') }
end

exit run(ARGV)
